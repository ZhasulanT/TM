{"version":3,"sources":["utils/consts.js","components/Navbar.js","components/Login.js","components/Loader.js","routes.js","components/Chat.js","components/AppRouter.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","AppBar","color","position","Toolbar","variant","Grid","container","justify","Button","onClick","signOut","to","Login","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","Container","style","height","window","innerHeight","alignItems","width","background","direction","Box","p","Loader","className","publicRoutes","path","Component","privateRoutes","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","marginTop","border","overflowY","map","message","margin","marginLeft","padding","Avatar","src","TextField","fullWidth","rowsMax","onChange","e","target","AppRouter","component","exact","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.42d4bbd0.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login'\nexport const CHAT_ROUTE = '/chat'\n","import React, {useContext} from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {Button, Grid} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport {LOGIN_ROUTE} from \"../utils/consts\";\nimport {Context} from \"../index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\n\nconst Navbar = () => {\n    const {auth} = useContext(Context)\n    const [user] = useAuthState(auth)\n\n    return (\n        <AppBar color={\"secondary\"} position=\"static\">\n            <Toolbar variant={\"dense\"}>\n                <Grid container justify={\"flex-end\"}>\n                    {user ?\n                        <Button onClick={() => auth.signOut()} variant={\"outlined\"}>Выйти</Button>\n                        :\n                        <NavLink to={LOGIN_ROUTE}>\n                            <Button variant={\"outlined\"}>Логин</Button>\n                        </NavLink>\n                    }\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navbar;\n","import React, {useContext} from 'react';\nimport {Button, Container, Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {Context} from \"../index\";\nimport firebase from \"firebase\";\n\n\nconst Login = () => {\n    const {auth} = useContext(Context)\n\n    const login = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider()\n        const {user} = await auth.signInWithPopup(provider)\n        console.log(user)\n    }\n\n    return (\n        <Container>\n            <Grid container\n                  style={{height: window.innerHeight - 50}}\n                  alignItems={\"center\"}\n                  justify={\"center\"}\n            >\n                <Grid style={{width:400, background: 'lightgray'}}\n                      container\n                      alignItems={\"center\"}\n                      direction={\"column\"}\n                >\n                    <Box p={5}>\n                        <Button onClick={login} variant={\"outlined\"}>Войти с помощью Google</Button>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport {Button, Container, Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nconst Loader = () => {\n    return (\n        <Container>\n            <Grid container\n                  style={{height: window.innerHeight - 50}}\n                  alignItems={\"center\"}\n                  justify={\"center\"}\n            >\n                <Grid\n                      container\n                      alignItems={\"center\"}\n                      direction={\"column\"}\n                >\n                    <div className=\"lds-hourglass\"></div>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Loader;\n","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/consts\";\nimport Login from \"./components/Login\";\nimport Chat from \"./components/Chat\";\n\nexport const publicRoutes = [\n    {\n        path: LOGIN_ROUTE,\n        Component: Login\n    }\n]\n\nexport const privateRoutes = [\n    {\n        path: CHAT_ROUTE,\n        Component: Chat\n    }\n]\n","import React, {useContext, useState} from 'react';\nimport {Context} from \"../index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Avatar, Button, Container, Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\nimport Loader from \"./Loader\";\nimport firebase from \"firebase\";\n\nconst Chat = () => {\n    const {auth, firestore} = useContext(Context)\n    const [user] = useAuthState(auth)\n    const [value, setValue] = useState('')\n    const [messages, loading] = useCollectionData(\n        firestore.collection('messages').orderBy('createdAt')\n    )\n\n    const sendMessage = async () => {\n        firestore.collection('messages').add({\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n            text: value,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setValue('')\n    }\n\n    if (loading) {\n        return <Loader/>\n    }\n\n    return (\n        <Container>\n            <Grid container\n                  justify={\"center\"}\n                  style={{height: window.innerHeight - 50, marginTop: 20}}>\n                <div style={{width: '80%', height: '60vh', border: '1px solid gray', overflowY: 'auto'}}>\n                    {messages.map(message =>\n                        <div style={{\n                            margin: 10,\n                            border: user.uid === message.uid ? '2px solid green' : '2px dashed red',\n                            marginLeft: user.uid === message.uid ? 'auto' : '10px',\n                            width: 'fit-content',\n                            padding: 5,\n                        }}>\n                            <Grid container>\n                                <Avatar src={message.photoURL}/>\n                                <div>{message.displayName}</div>\n                            </Grid>\n                            <div>{message.text}</div>\n                        </div>\n                    )}\n                </div>\n                <Grid\n                    container\n                    direction={\"column\"}\n                    alignItems={\"flex-end\"}\n                    style={{width: '80%'}}\n                >\n                    <TextField\n                        fullWidth\n                        rowsMax={2}\n                        variant={\"outlined\"}\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                    />\n                    <Button onClick={sendMessage} variant={\"outlined\"}>Отправить</Button>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Chat;\n","import React, {useContext} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport {privateRoutes, publicRoutes} from \"../routes\";\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"../utils/consts\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Context} from \"../index\";\n\nconst AppRouter = () => {\n    const {auth} = useContext(Context)\n    const [user] = useAuthState(auth)\n\n    return user ?\n        (\n            <Switch>\n                {privateRoutes.map(({path, Component}) =>\n                    <Route key={path} path={path} component={Component} exact={true}/>\n                )}\n                <Redirect to={CHAT_ROUTE}/>\n            </Switch>\n        )\n        :\n        (\n            <Switch>\n                {publicRoutes.map(({path, Component}) =>\n                    <Route key={path} path={path} component={Component} exact={true}/>\n                )}\n                <Redirect to={LOGIN_ROUTE}/>\n            </Switch>\n        )\n};\n\nexport default AppRouter;\n","import React, {useContext} from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport Navbar from \"./components/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport './App.css'\nimport {Context} from \"./index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport Loader from \"./components/Loader\";\n\nconst App = () => {\n    const {auth} = useContext(Context)\n    const [user, loading, error] = useAuthState(auth)\n\n    if (loading) {\n        return <Loader/>\n    }\n\n    return (\n        <BrowserRouter>\n            <Navbar/>\n            <AppRouter/>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport firebase from \"firebase\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBdO3QSwROzqcn-RsJxTnOghXMz-ZWjrfU\",\n    authDomain: \"chat-tm-c7ea2.firebaseapp.com\",\n    projectId: \"chat-tm-c7ea2\",\n    storageBucket: \"chat-tm-c7ea2.appspot.com\",\n    messagingSenderId: \"169367922242\",\n    appId: \"1:169367922242:web:8800cad8da10180a2a2fdb\",\n    measurementId: \"G-7NCL83J5V0\"\n    }\n);\n\nexport const Context = createContext(null)\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\n\nReactDOM.render(\n    <Context.Provider value={{\n        firebase,\n        auth,\n        firestore\n    }}>\n        <App />\n    </Context.Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}